# frameBlendMerge v1.4 by Richard Frazer
# www.richardfrazer.com/tools-tutorials/frameblendmerge/

Group {
 name FrameBlendMerge
 help http://richardfrazer.com/tools-tutorials/frameblendmerge/
 knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\n#print n\['customframerange'].getValue()\nif k.name()==\"customframerange\":\n    n\['framerangestart'].setEnabled((n\['customframerange'].getValue())!=0)\n    n\['framerangeend'].setEnabled(n\['customframerange'].getValue()!=0)\n    n\['numberframes'].setEnabled((1-n\['customframerange'].getValue())!=0)\nif k.name()==\"invertalpha\":\n    n\['defaultinvert'].setValue((n\['invertalpha'].getValue())!=0)\nif k.name()==\"method\":\n    n\['vectordetail'].setVisible((n\['method'].getValue())!=0)\n    n\['smooth'].setVisible(n\['method'].getValue()!=0)\n    if n\['method'].getValue()==0:\n        n\['invertalpha'].setValue(n\['defaultinvert'].getValue())\n    if n\['method'].getValue()==1:\n        n\['invertalpha'].setValue(0)\n"
 label 1031-1040
 selected true
 xpos -1347
 ypos -1319
 addUserKnob {20 User}
 addUserKnob {4 operation M {atop average color-burn color-dodge conjoint-over copy difference disjoint-over divide exclusion from geometric hard-light hypot in mask matte max min minus multiply out over overlay plus screen soft-light stencil under xor}}
 operation min
 addUserKnob {26 ""}
 addUserKnob {26 text2 l "" +STARTLINE T "Frame blend\n"}
 addUserKnob {3 framerangestart l "Frame Range"}
 framerangestart 1031
 addUserKnob {3 framerangeend l "" -STARTLINE}
 framerangeend 1040
 addUserKnob {22 InputRange l "Input Range" -STARTLINE T "n = nuke.thisNode()\nf = n.firstFrame()\nl = n.lastFrame() \n\nn\['framerangestart'].setValue(f)\nn\['framerangeend'].setValue(l)"}
 addUserKnob {26 ""}
 addUserKnob {22 update l Update T "nuke.thisNode().begin()\n\nt = nuke.thisNode()\n\ntname = t.name()\n\n#print ('tname: ' + tname)\n\n\n\nframestart = int(t\['framerangestart'].value())\nframeend = int(t\['framerangeend'].value())\n\np = -1000\n\nfor d in nuke.allNodes():\n    if (d.Class() == 'FrameHold') or (d.Class() == 'Merge2'):\n         nuke.delete(d) \n    #else:\n    #     print (\"Ignore this\" + d.Class() )\n\n\nfor x in xrange(framestart, frameend):\n    nname = 'FrameHoldMerge' +str(x)\n    if(nuke.exists( nname )):\n        #print (nname + \" exists\")\n        k = nuke.toNode ( nname ) \n        nuke.delete ( k )\n    n = nuke.createNode( 'FrameHold' )              \n    n\['name'].setValue( nname )\n    n\['first_frame'].setValue( x )\n    n.setXYpos( p, 600 )\n    n.setInput(0, nuke.toNode( 'inputDot' ))\n    p = p + 100\n\nnewMerge = nuke.createNode('Merge2')\nnewMerge\['name'].setValue( 'MergeFrames' )\nnewMerge.setXYpos( -900, 700 )  \n\ni = 0\n\nfor x in xrange(framestart, frameend):\n    nname = 'FrameHoldMerge' +str(x)\n    n = nuke.toNode( nname )\n    if(i==2):\n        i=i+1\n    #print(\"connecting input \" + str(i))\n    newMerge.setInput(i, nuke.toNode( nname ))\n    i=i+1\n\nnewMerge.setInput(2, nuke.toNode( \"mask_dot\" ))\n\ntoperation = t\['operation'].value()\nnewMerge\['operation'].setValue( toperation )\n\no = nuke.toNode( 'OutputBlend' )\no.setInput(0, newMerge)\n\n\ntLabel = str(framestart) + \"-\" + str(frameend)\n\nt\['label'].setValue(tLabel)\n\nnewMerge.hideControlPanel()\n\nnuke.thisNode().end()\n\n\n\n\n" +STARTLINE}
 addUserKnob {20 About}
 addUserKnob {26 textabout l "" +STARTLINE T "FrameBlendMerge v1.5 by Richard Frazer\nwww.richardfrazer.com/tools-tutorials/frameblendmerge/\n"}
}
 Input {
  inputs 0
  name Input
  xpos -905
  ypos 395
 }
 Dot {
  name inputDot
  xpos -871
  ypos 495
 }
set N957c930 [stack 0]
 FrameHold {
  first_frame 1039
  name FrameHoldMerge1039
  xpos -200
  ypos 600
 }
push $N957c930
 FrameHold {
  first_frame 1038
  name FrameHoldMerge1038
  xpos -300
  ypos 600
 }
push $N957c930
 FrameHold {
  first_frame 1037
  name FrameHoldMerge1037
  xpos -400
  ypos 600
 }
push $N957c930
 FrameHold {
  first_frame 1036
  name FrameHoldMerge1036
  xpos -500
  ypos 600
 }
push $N957c930
 FrameHold {
  first_frame 1035
  name FrameHoldMerge1035
  xpos -600
  ypos 600
 }
push $N957c930
 FrameHold {
  first_frame 1034
  name FrameHoldMerge1034
  xpos -700
  ypos 600
 }
push $N957c930
 FrameHold {
  first_frame 1033
  name FrameHoldMerge1033
  xpos -800
  ypos 600
 }
 Input {
  inputs 0
  name Mask
  xpos -1349
  ypos 579
  number 1
 }
push $N957c930
 Dot {
  name Dot2
  xpos -1202
  ypos 572
 }
 Remove {
  name Remove1
  xpos -1236
  ypos 604
 }
 Shuffle {
  red black
  green black
  blue black
  alpha white
  name Shuffle1
  xpos -1236
  ypos 638
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input1]" i}}
  name Switch3
  xpos -1349
  ypos 647
 }
 Dot {
  name mask_dot
  xpos -1315
  ypos 703
 }
set N980c820 [stack 0]
push $N957c930
 FrameHold {
  first_frame 1032
  name FrameHoldMerge1032
  xpos -900
  ypos 600
 }
push $N957c930
 FrameHold {
  first_frame 1031
  name FrameHoldMerge1031
  xpos -1000
  ypos 600
 }
 Merge2 {
  inputs 9+1
  operation min
  name MergeFrames
  selected true
  xpos -900
  ypos 700
 }
 Output {
  name OutputBlend
  xpos -900
  ypos 817
 }
push $N980c820
 Viewer {
  input_process false
  name Viewer1
  xpos -1341
  ypos 942
 }
end_group


